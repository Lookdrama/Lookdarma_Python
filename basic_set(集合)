"集合的创建方式"
"第一种创建方式，使用{}"
s={1,2,32,3,43,2,24}    #集合中的元素不允许重复，会将重复的元素去掉
print(s)
print(type(s))

"第二种方式，使用set()"
s1=set({1,2,32,3,43,2,24})
print(s)
print(type(s))

"集合的相关操作"
'''
    集合元素的判断操作：
    in 或 not in
'''
s={1,2,32,3,43,2,24}
print(1 in s)
print(4 not in s)

'''
    集合元素的新增操作：
    调用add()方法，一次添加一个元素
    调用update()方法至少添加一个元素
'''
s={1,2,32,3,43,2,24}
s.add(100)
print(s)
s.update({200,300,400}) #可放列表，元组，字符串，集合
print(s)

'''
    集合元素的删除操作：
    调用remove()方法，一次删除一个指定元素，如果指定元素不存在抛出KeyError
    调用discard()方法，一次删除一个指定元素，如果指定元素不存在不抛出异常
    调用pop()方法，一次只删除一个任意元素
    调用clear()方法，清空集合
'''
s.remove(1)
print(s)
s.discard(100)
print(s)
s.pop()
print(s)
s.clear()
print(s)

"集合间的关系"
"两个集合是否相等（元素相同，就相等）"
s={1,2,3,4,5}
s1={1,2,3,4,5,6}
s2={5,4,3,2,1}
print(s==s1)
print(s==s2)

"集合中的数学操作"
s={1,2,3,4,5}
s1={1,2,3,4,5,6}
s2={5,4,3,2,1}
print(s & s1)   #交集操作
print(s | s1)   #并集操作
print(s-s1)     #差集操作
print(s1-s)     #差集操作
print(s1.symmetric_difference(s2))      #对称差操作
print(s1^s2)        #对称差操作

"集合生成式"
'''
    {i*i for i in range(1,10}   (与列表生成式相似)
'''
s={i*i for i in range(10)}
print(s)
